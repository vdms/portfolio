/*!
 * fixed.css - fix css defaults.
 * Copyright 2016 Adrian Klimek
 * Released under the MIT License
 * Version 1.0.0
 */
*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

html {
  line-height: 1;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block; }

html,
body,
div,
span,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
address,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
samp,
small,
strong,
sub,
sup,
var,
b,
i,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  vertical-align: baseline;
  border: 0; }

table {
  border-spacing: 0;
  border-collapse: collapse; }

audio,
canvas,
progress,
video {
  display: inline-block; }

a {
  background-color: transparent; }

a:active,
a:hover {
  outline: 0; }

small {
  font-size: 75%; }

[hidden],
template {
  display: none; }

audio:not([controls]) {
  display: none;
  height: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

svg:not(:root) {
  overflow: hidden; }

button,
input,
optgroup,
select,
textarea {
  font: inherit;
  color: inherit; }

textarea {
  overflow: auto; }

input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

input[type='search'] {
  -webkit-appearance: textfield; }

input[type='checkbox'],
input[type='radio'] {
  padding: 0; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0; }

/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on February 9, 2018 */
@font-face {
  font-family: 'Metropolis';
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/metropolis-regular-webfont.woff2") format("woff2"), url("../fonts/metropolis-regular-webfont.woff") format("woff"); }

@font-face {
  font-family: 'Metropolis';
  font-style: normal;
  font-weight: 500;
  src: url("../fonts/metropolis-medium-webfont.woff2") format("woff2"), url("../fonts/metropolis-medium-webfont.woff") format("woff"); }

@font-face {
  font-family: 'Metropolis';
  font-style: normal;
  font-weight: 700;
  src: url("../fonts/metropolis-bold-webfont.woff2") format("woff2"), url("../fonts/metropolis-bold-webfont.woff") format("woff"); }

.color-palette {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  margin: 2rem 0; }
  .color-palette > * {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 20%;
            flex: 0 0 20%;
    padding-top: 20%;
    position: relative; }
    .color-palette > *::after {
      bottom: 0;
      border-radius: 50%;
      -webkit-box-shadow: 0 0 2px #6b6b6b;
              box-shadow: 0 0 2px #6b6b6b;
      content: '';
      left: 0;
      margin: .5rem;
      position: absolute;
      right: 0;
      top: 0; }

.icon {
  height: 1.5rem;
  width: 1.5rem; }

.internal-nav {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background-color: rgba(250, 250, 250, 0.9);
  border-bottom: 2px solid #dbdbdb;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  padding: 1rem 2rem; }
  .internal-nav__title {
    display: none;
    font-weight: 700;
    opacity: 1; }
    @media (min-width: 48.1rem) {
      .internal-nav__title {
        display: block;
        -webkit-box-flex: 0;
            -ms-flex: 0 0 30%;
                flex: 0 0 30%;
        font-size: 2rem;
        margin-right: 5%; } }
  .internal-nav__nav {
    width: 35rem; }
    @media (min-width: 48.1rem) {
      .internal-nav__nav {
        margin-right: auto; } }
  .internal-nav__list {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    font-size: .85em;
    -ms-flex-pack: distribute;
        justify-content: space-around; }
    .internal-nav__list > *:not(:first-child) {
      margin-left: 2rem; }
    @media (min-width: 48.1rem) {
      .internal-nav__list {
        -webkit-box-pack: start;
            -ms-flex-pack: start;
                justify-content: flex-start; } }
  .internal-nav__link--active {
    font-weight: 700;
    opacity: 1;
    position: relative; }
    .internal-nav__link--active::before {
      background-color: #00e6e6;
      bottom: 0;
      content: '';
      left: 0;
      position: absolute;
      right: 0;
      z-index: -1;
      height: .15rem;
      top: calc(100% + .25rem); }

.list > li:not(:first-child) {
  margin-top: 1em; }

.list--inline {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row; }
  .list--inline > li:not(:first-child) {
    margin-left: 1rem;
    margin-top: 0; }

.project {
  position: relative; }
  .project__cover {
    display: block;
    height: auto;
    max-width: 100%;
    width: 10rem; }
  .project__responsible {
    background-color: #dbdbdb;
    display: block;
    font-size: .85rem;
    margin-bottom: 1rem;
    padding: .5rem;
    position: relative; }
  .project__step {
    font-size: 1.5rem;
    font-weight: 700;
    letter-spacing: .075em;
    margin-bottom: 1em;
    padding-top: 6rem;
    text-transform: uppercase; }
    .project__step + [class*='substep'] {
      margin-top: 2rem; }
  .project__substep {
    font-size: 1.25rem;
    margin-bottom: .5rem;
    margin-top: 4rem; }
  .project__list {
    font-size: .85em;
    list-style: initial;
    margin-bottom: 0;
    margin-top: 1rem;
    padding-left: 1rem; }
    .project__list > li {
      margin-top: .5em; }
    .project__list [class*='__list'] {
      font-size: 1em;
      list-style: circle;
      margin-bottom: 1rem;
      padding-left: 3em; }
  .project__thumb {
    margin-top: 1rem; }
    .project__thumb--sm {
      width: 80%; }
      @media (min-width: 48.1rem) {
        .project__thumb--sm {
          display: inline-block;
          margin-right: 2%;
          width: 40%; } }
    .project__thumb--nocaption > figcaption {
      display: none; }
  .project__nav {
    left: 0;
    opacity: 0;
    position: fixed;
    top: 0;
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
    -webkit-transition: 300ms;
    transition: 300ms;
    width: 100%;
    z-index: 2; }
    .project__nav--is-show {
      opacity: 1;
      -webkit-transform: translateY(0);
              transform: translateY(0); }

.video-player {
  display: block;
  width: 100%; }

html {
  font-size: 16px; }

body {
  -moz-osx-font-smoothing: grayscale;
  -ms-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
  background-color: #f2f2f2;
  color: #2e2e2e;
  font-family: Helvetica, Arial, sans-serif;
  font-size: 1rem;
  font-weight: 400;
  height: 100%;
  line-height: 1.25; }
  @media (min-width: 48.1rem) {
    body {
      font-size: 1.25rem; } }

.metropolis {
  font-family: "Metropolis", Helvetica, Arial, sans-serif; }

p + p {
  margin-top: 1rem; }

ul {
  list-style: none; }

a {
  color: #2e2e2e;
  display: inline-block;
  line-height: 1rem;
  text-decoration: none;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  -webkit-transition: opacity 300ms;
  transition: opacity 300ms; }

img {
  display: block;
  height: auto;
  width: 100%; }

svg {
  fill: currentColor; }

figure {
  border: 1px solid #dbdbdb;
  margin-bottom: 4rem;
  position: relative; }

figcaption {
  font-size: .8em;
  font-style: italic;
  position: absolute;
  top: calc(100% + .25em);
  width: 100%; }

figure + figure,
figure + iframe,
figure + img,
figure + video,
video + figure,
video + iframe,
video + img,
video + video {
  margin-top: 2rem; }

.page__title {
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: -.025em;
  line-height: 1;
  margin-bottom: .85rem;
  padding-bottom: .25rem; }
  @media (min-width: 48.1rem) {
    .page__title {
      font-size: 4rem; } }

.page__intro {
  font-size: 1.5rem;
  font-weight: 500;
  line-height: 1.25;
  margin-bottom: 1.85rem; }

.portfolio__list > * {
  margin-bottom: 1em; }

.portfolio__thumb {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  min-height: 10rem;
  overflow: hidden;
  position: relative; }
  .portfolio__thumb::before {
    background-position: center center;
    background-size: cover;
    bottom: 0;
    content: '';
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    -webkit-transform: scale(1.2);
            transform: scale(1.2);
    -webkit-transition: -webkit-transform 300ms;
    transition: -webkit-transform 300ms;
    transition: transform 300ms;
    transition: transform 300ms, -webkit-transform 300ms;
    will-change: transform;
    z-index: 1; }
  .portfolio__thumb::after {
    background-color: rgba(5, 5, 5, 0.8);
    bottom: 0;
    content: '';
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 2; }
  @media (hover: hover), (hover: on-demand) {
    .portfolio__thumb:hover::before {
      -webkit-transform: scale(1);
              transform: scale(1); } }

.portfolio__label {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  color: #dbdbdb;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-size: calc(1rem + 1.5vw);
  font-weight: 700;
  height: 100%;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  letter-spacing: .15em;
  text-transform: uppercase;
  width: 100%;
  z-index: 3; }

.portfolio__quicklessons::before {
  background-image: url("../images/quicklessons__demo-poster.jpg"); }

.portfolio__start::before {
  background-image: url("../images/start__printscreen--landscape--05.png"); }

.site {
  padding: 1rem; }
  @media (min-width: 48.1rem) {
    .site {
      -webkit-box-align: start;
          -ms-flex-align: start;
              align-items: flex-start;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-flow: row;
              flex-flow: row;
      padding: 3rem 2rem; } }
  .site__header {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    margin-bottom: 3rem; }
    @media (min-width: 48.1rem) {
      .site__header {
        -webkit-box-align: start;
            -ms-flex-align: start;
                align-items: flex-start;
        -webkit-box-flex: 0;
            -ms-flex: 0 1 30%;
                flex: 0 1 30%;
        margin-bottom: 8rem;
        margin-right: 5%; } }
  .site__main {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    margin-right: 5%;
    max-width: 35em;
    padding-bottom: 2rem;
    position: relative; }
  .site__title {
    color: #2e2e2e;
    display: block;
    font-size: 1.75rem;
    font-weight: 700;
    letter-spacing: -.025em;
    line-height: 1;
    padding: .75rem 0 0; }
    @media (min-width: 48.1rem) {
      .site__title {
        margin-bottom: 1.75rem; } }
  .site__nav {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row; }
    .site__nav > * {
      margin-right: 1rem; }
    @media (min-width: 48.1rem) {
      .site__nav {
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
            -ms-flex-direction: column;
                flex-direction: column; } }
  .site__link {
    display: inline-block;
    font-size: 1rem;
    letter-spacing: .06em;
    margin-top: 1rem;
    padding: 0; }
    @media (min-width: 48.1rem) {
      .site__link {
        font-size: 1.25rem;
        margin-bottom: .35em; } }
    .site__link--active {
      font-weight: 700;
      opacity: 1;
      position: relative; }
      .site__link--active::before {
        background-color: #00e6e6;
        bottom: 0;
        content: '';
        left: 0;
        position: absolute;
        right: 0;
        z-index: -1;
        height: .15rem;
        top: calc(100% + .25rem); }
  .site__contact {
    color: #2e2e2e;
    margin-top: 2rem; }
    .site__contact > * {
      height: 1rem; }

.ql-color--1::after {
  background-color: #13293d; }

.ql-color--2::after {
  background-color: #006494; }

.ql-color--3::after {
  background-color: #3686b5; }

.ql-color--4::after {
  background-color: #5a93b5; }

.ql-color--5::after {
  background-color: #e8f1f2; }

.ql-color--active::after {
  background-color: #e84855; }

.ql-color--black::after {
  background-color: rgba(0, 0, 0, 0.85); }

.ql-color--gray--dark--blueish::after {
  background-color: #243034; }

.ql-color--gray--dark::after {
  background-color: #393c45; }

.ql-color--gray::after {
  background-color: #999999; }

.ql-color--gray--lighter::after {
  background-color: #dbdbdb; }

.start-color--black::after {
  background-color: rgba(12, 8, 3, 0.9); }

.start-color--gray--dark::after {
  background-color: #454545; }

.start-color--gray::after {
  background-color: #999999; }

.start-color--gray--light::after {
  background-color: #d1d1d1; }

.start-color--white::after {
  background-color: #fafafa; }

.start-color--info::after {
  background-color: #279bd2; }

.start-color--error::after {
  background-color: #df5349; }

.start-color--success::after {
  background-color: #56a259; }

.start-color--warning::after {
  background-color: #eab619; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
